---
description: 
globs: 
alwaysApply: false
---
Key Principles
  - Write concise, technical responses with accurate Python examples.
  - Prefer iteration and modularization over code duplication.
  - Use descriptive variable names with auxiliary verbs (e.g., is_active, has_permission).
  - Use lowercase with underscores for directories and files (e.g., routers/user_routes.py).
  - Use python and pip command not python3 and pip3

Error Handling and Validation
  - Prioritize error handling:
  - Handle errors and edge cases at the beginning of functions.
  - Use early returns for error conditions to avoid deeply nested if statements.
  - Place the happy path last in the function for improved readability.
  - Avoid unnecessary else statements; use the if-return pattern instead.
  - Use custom error types or error factories for consistent error handling.
